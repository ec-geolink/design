## This query is issued to NERC vocabulary server's SPARQL endpoint at http://vocab.nerc.ac.uk/sparql/
## Then, the result is saved into XML format as L05.owl

PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX xml: <http://www.w3.org/XML/1998/namespace>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dcterms: <http://purl.org/dc/terms/>
## PREFIX foaf: <http://xmlns.com/foaf/0.1/>
## PREFIX geosparql: <http://www.opengis.net/ont/geosparql#>
## PREFIX time: <http://www.w3.org/2006/time#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX glvoc_L05: <http://schema.geolink.org/dev/voc/nvs/L05#>
PREFIX glview: <http://schema.geolink.org/dev/view#>

CONSTRUCT {
	<http://schema.geolink.org/dev/voc/nvs/L05> a owl:Ontology ;
				rdfs:label ?ontolabel ;
				dcterms:date ?ontodate ;
				owl:versionInfo ?ontovers ;
				rdfs:comment "This ontology captures SeaVoX Instrument categories (e.g., vessel, mooring, etc.) as hosted in the NERC vocabulary server"@en ;
				rdfs:seeAlso <http://vocab.nerc.ac.uk/collection/L05/> .
	
	glview:Instrument a owl:Class .
	glview:InstrumentType a owl:Class .
	glview:hasInstrumentType a owl:ObjectProperty .
	
	?sub ?pred1 ?obj1a, ?obj1b, ?obj1c ; 
		rdfs:label ?label ;
		rdfs:comment ?def ;
		rdfs:seeAlso ?Y ;
		?pred2 ?obj2.
	[] 	a owl:Restriction; 
		owl:onProperty glview:hasInstrumentType; 
		owl:someValuesFrom [ a owl:Class ; owl:oneOf ( ?sub ) ] ;
		rdfs:subClassOf ?sub .
}
WHERE {
	SELECT 	DISTINCT 	
		?ontolabel ?ontodate ?ontovers
		?sub ?Y ?label ?def
		?pred1 ?obj1a ?obj1b ?obj1c 
		?pred2 ?obj2
	WHERE {
	  VALUES ( ?graphsource ?graphdest ) { ( <http://vocab.nerc.ac.uk/collection/L05/current/> <http://schema.geolink.org/dev/voc/nvs/L05> ) }
		?graphsource skos:member ?Y ; skos:prefLabel ?ontolabel ; dcterms:date ?ontodate ; owl:versionInfo ?ontovers .	
		?Y skos:prefLabel ?label; skos:definition ?def .
		{	?graphsource skos:member ?Z.
			?Y skos:broader ?Z .		
		} UNION {		
			FILTER NOT EXISTS { ?graphsource skos:member ?Z . ?Y skos:broader ?Z .}	
		}
		
		BIND ( replace( replace( str(?Y), str(?graphsource), "", "i"), "/", "", "i") as ?yname )
		BIND ( iri(concat(str(?graphdest), "#", ?yname )) as ?sub )		
		BIND ( rdf:type as ?pred1 )
		BIND ( owl:Class as ?obj1a )
		BIND ( owl:NamedIndividual as ?obj1b )
		BIND ( glview:InstrumentType as ?obj1c )
		BIND ( rdfs:subClassOf as ?pred2 )	
		BIND ( if( !bound(?Z), glview:Instrument, replace( replace( str(?Z), str(?graphsource), "", "i"), "/", "", "i") ) as ?zname )
		BIND ( if( !bound(?Z), glview:Instrument,  iri(concat(str(?graphdest), "#", ?zname )) ) as ?obj2 )
			
	}
}
