## This query is issued to NERC vocabulary server's SPARQL endpoint at http://vocab.nerc.ac.uk/sparql/
## Then, the result is saved into XML format as L22.owl
## Assumption: L05.owl is also generated

PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX xml: <http://www.w3.org/XML/1998/namespace>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dcterms: <http://purl.org/dc/terms/>
## PREFIX foaf: <http://xmlns.com/foaf/0.1/>
## PREFIX geosparql: <http://www.opengis.net/ont/geosparql#>
## PREFIX time: <http://www.w3.org/2006/time#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX glvoc_L22: <http://schema.geolink.org/dev/voc/nvs/L22#>
PREFIX glvoc_L05: <http://schema.geolink.org/dev/voc/nvs/L05#>
PREFIX glview: <http://schema.geolink.org/dev/view#>

CONSTRUCT {
	?L22destURI a owl:Ontology ;
		rdfs:label ?L22graphdestLabel ;
		dcterms:date ?L22graphdestDate ;
		owl:versionInfo ?L22graphdestVers ;
		rdfs:comment "This ontology captures SeaVoX device catalogue from NERC vocabulary server with mapping to SeaDataNet device categories"@en ;		
		rdfs:seeAlso ?L22sourceURI, ?L05sourceURI ;
		owl:imports ?L05destURI .
	
	glview:Instrument a owl:Class .
	glview:InstrumentType a owl:Class .
	glview:hasInstrumentType a owl:ObjectProperty .

	?L22destTermURI a owl:Class, owl:NamedIndividual, glview:InstrumentType ; 
		rdfs:label ?L22destTermLabel ;
		rdfs:comment ?L22destTermDef ;
		rdfs:seeAlso ?L22destTermSeeAlso .
	[] 	a owl:Restriction; 
		owl:onProperty glview:hasInstrumentType; 
		owl:someValuesFrom [ a owl:Class ; owl:oneOf ( ?L22destTermURI ) ] ;
		rdfs:subClassOf ?L22destTermURI .	
	
	?L22destTermURI ?L22toL22destTermRelation ?L22destSuperTermURI .
	?L22destTermURI ?L22toL05destTermRelation ?L05destTermURI .
	?L22destTermURI ?L22defaultRelation ?glviewInstrumentOrOWLCLass .
	
}
WHERE {
	SELECT 	DISTINCT *
	WHERE {
		VALUES ( ?L22sourceURI ?L22destURI ) { ( <http://vocab.nerc.ac.uk/collection/L22/current/> <http://schema.geolink.org/dev/voc/nvs/L22> ) }		
		?L22sourceURI skos:member ?L22sourceTermURI ; 
			skos:prefLabel ?L22graphdestLabel ; 
			dcterms:date ?L22graphdestDate ; 
			owl:versionInfo ?L22graphdestVers .			
		OPTIONAL { ?L22sourceTermURI skos:prefLabel ?L22sourceTermLabel . }
		OPTIONAL { ?L22sourceTermURI skos:definition ?L22sourceTermDef .}
		OPTIONAL {	?L22sourceURI skos:member ?L22sourceSuperTermURI.
					?L22sourceTermURI skos:broader ?L22sourceSuperTermURI .	} 
		VALUES ( ?L05sourceURI ?L05destURI ) { ( <http://vocab.nerc.ac.uk/collection/L05/current/> <http://schema.geolink.org/dev/voc/nvs/L05> ) }
		OPTIONAL {	?L05sourceURI skos:member ?L05sourceTermURI .
					?L22sourceTermURI ?L22toL05termrelation ?L05sourceTermURI .	
					FILTER (?L22toL05termrelation in (skos:broader, owl:sameAs)) } 
		
		BIND ( if(bound(?L22sourceTermLabel), ?L22sourceTermLabel, "") as ?L22destTermLabel )
		BIND ( if(bound(?L22sourceTermDef), ?L22sourceTermDef, "") as ?L22destTermDef )
		BIND ( ?L22sourceTermURI as ?L22destTermSeeAlso )
		BIND ( replace( replace( str(?L22sourceTermURI), str(?L22sourceURI), "", "i"), "/", "", "i") as ?L22term )
		BIND ( iri(concat(str(?L22destURI), "#", ?L22term )) as ?L22destTermURI )		
		
		BIND (	
			if(bound(?L22sourceSuperTermURI),
				iri(concat(str(?L22destURI), "#", replace(replace(str(?L22sourceSuperTermURI), str(?L22sourceURI), "", "i"), "/", "", "i") )),
				owl:Class )				 
		as ?L22destSuperTermURI )
		BIND (	if(bound(?L22sourceSuperTermURI), rdfs:subClassOf, rdf:type ) as ?L22toL22destTermRelation )
		BIND (	if(bound(?L05sourceTermURI),
					iri(concat(str(?L05destURI), "#", replace(replace(str(?L05sourceTermURI), str(?L05sourceURI), "", "i"), "/", "", "i") )),
					owl:Class )
		as ?L05destTermURI )
		BIND ( 	if(bound(?L05sourceTermURI),	
					if(?L22toL05termrelation = owl:sameAs, owl:equivalentClass, rdfs:subClassOf ), 
					rdf:type ) 
		as ?L22toL05destTermRelation)
		BIND (	if( (!bound(?L05sourceTermURI) && !bound(?L22sourceSuperTermURI)) || (bound(?L05sourceTermURI) && ?L22toL05termrelation = owl:sameAs), 
					glview:Instrument,
					owl:Class )
		as ?glviewInstrumentOrOWLCLass )
		BIND (	if( (!bound(?L05sourceTermURI) && !bound(?L22sourceSuperTermURI)) || (bound(?L05sourceTermURI) && ?L22toL05termrelation = owl:sameAs), 
					rdfs:subClassOf,
					rdf:type )
		as ?L22defaultRelation)
	}
}

