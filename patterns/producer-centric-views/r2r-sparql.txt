PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX xml: <http://www.w3.org/XML/1998/namespace>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dcterms: <http://purl.org/dc/terms/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX geosparql: <http://www.opengis.net/ont/geosparql#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX ecgl: <http://schema.geolink.org/1.0/>
PREFIX ecglview: <http://schema.geolink.org/view/1.0/>
PREFIX ecglvoc: <http://schema.geolink.org/voc/1.0/>

## If some triple in the WHERE clause is optional in the data, then use OPTIONAL clause?
## Need to figure out which triple pattenrs oae
## Currently, only construct triples from non-inverse relationship. 

## dcterms:identifier is always mapped to ecgl:hasAlternateID
## unless it's the "main" class in that particular view, put the typing in the CONSTRUCT clause instead of in the WHERE clause. 
## That is, data providers should only give a typing as a bootstrap.


## Based on <http://linked.rvdata.us/page/award/100004> 
## r2r:Award rdfs:subClassOf ecglview:Award 

CONSTRUCT {
	?X rdf:type ecgl:FundingAward .
	_:ar ecgl:isAgentRoleIn ?X .
	_:ar rdf:type ecgl:AgentRole .
	_:ar ecgl:hasAgentRoleType ecglvoc:funding_award_sponsor_role .
	_:ar ecgl:isPerformedBy ?Z .
	?Z rdf:type ecgl:Organization . 
	?X ecgl:isDescribedBy _:io .
	_:io rdf:type ecgl:FundingAwardInformationObject .
	_:io ecgl:hasAlternateID [ ?ID, ?L ] .
	_:io ecgl:hasTitle ?T .
	_:io ecgl:seeAlso ?W .
}
FROM <http://address-to-r2r-graph-mapped-to-view>
WHERE {
	?X rdf:type ecglview:Award .
	?X ecglview:hasSponsor ?Z.
	OPTIONAL { ?X rdfs:label ?L . }
	OPTIONAL { ?X dcterms:title ?T . }
	OPTIONAL { ?X dcterms:identifier ?ID . }
	OPTIONAL { ?X dcterms:source ?W . }
}

## Based on <http://linked.rvdata.us/page/cruise/MGL0901>
## Only partially done .
## Event is for port arrival/departure?
## Fileset, Holding, : not yet done.
## cruise participant relationship is reified, but cruise operator and scheduler are not.

CONSTRUCT {
	?C rdf:type ecgl:Cruise .
	?C ecgl:isFundedBy ?AW .
	?C ecgl:
	_:arop rdf:type ecgl:AgentRole .
	_:arop ecgl:isAgentRoleIn ?C .
	_:arop ecgl:hasAgentRoleType ecgl:cruise_operator_role
	_:arop ecgl:isPerformedBy ?OP .
	?OP rdf:type ecgl:Organization .  
}
FROM <http://address-to-r2r-graph-mapped-to-view>
WHERE {
	?C rdf:type ecglview:Cruise .

	OPTIONAL { ?C ecglview:hasAward ?AW . }   

	?C ecglview:hasOperator ?OP .  
	?C ecglview:hasScheduler ?SCH .	

	OPTIONAL {
		?C ecglview:hasParticipation ?P .
			?P ecglview:hasAffiliationDuringCruise ?ORG .			
			?P ecglview:isPerformedBy ?PERS .			
			?P ecglview:hasRoleType ?ROL .		
	}

	OPTIONAL {
		?C ecglview:hasTrack ?TRACK .
			{ 	{ ?TRACK geosparql:asWKT ?WKT . } 
				UNION
				{ ?TRACK geosparql:asGML ?GML . }	} 
	}


	?C ecglview:hasStartPortCall ?PC0 .
	?PC0 ecglview:atPort ?PSTART .
	?PC0 ecglview:hasTimeStamp ?TSTART .

	OPTIONAL {
	?C ecglview:hasMidPortCall ?PCM .
		?PCM ecglview:atPort ?PMID .
		?PCM ecglview:hasTimeStamp ?TMID .
	}

	?C ecglview:hasEndPortCall ?PCN .
	?PCN ecgclview:atPort ?PEND .
	?PCN ecglview:hasTimeStamp ?TEND .

	?C ecglview:hasVessel ?V .  
	?C ecglview:hasCruiseType ?TY .

	?C dcterms:title ?T .  ## this is cruise title, i.e., cruise full name

	OPTIONAL {
	?C dcterms:identifier ?ID .  ## should be mapped as alternate ID or alias
	}

	OPTIONAL {
	?C rdfs:label ?L . ## as alternate ID or alias
	}

	OPTIONAL {
	?C rdfs:seeAlso ?W .  ## cruise webpage?
	}

	OPTIONAL { ?C ecglview:hasRelatedCruise ?C1 . } ## should be for a different cruise but related because they shared the same mission
  
 }

## http://linked.rvdata.us/page/device/100002
## r2r:Device rdfs:subClassOf ecglview:Device
CONSTRUCT {
}
FROM
WHERE {
  ?D ecglview:hasModel ?M .
  ?D ecglview:hasVendor ?ORG .
  ?D ecglview:hasDeviceType ?T .
  ?D dcterms:identifier ?ID .
  ?D rdfs:label ?L .
  ?D rdf:type ecglview:Device
  ## ?D rdf:type ?NERCVOC .
}

## <http://linked.rvdata.us/page/event/100002781>
## This corresponds to arrival/departure from port  -- drop this 
## We do need probably a Port class as a subclass of Place -- generalize this to gazetteer

CONSTRUCT {
}
FROM <http://address-to-graph-view>
WHERE {
  ?E ecglview:hasPort ?P .
  ?E ecglview:hasPortActivityTypeVoc ?A .
  ?E ecglview:hasTimeStamp ?T .
  ?E rdfs:label ?L .
  ?E rdf:type ecglview:Event .
}

## <http://linked.rvdata.us/page/fileset/101244>
## r2r:Fileset rdfs:subClassOf ecglview:DigitalObjectRecord
## wait for Bob republished the data as a particular 

CONSTRUCT {
} 
FROM
WHERE {
  ?FS ecglview:hasDevice ?DV .
  ?FS ecglview:hasFormat ?FMT .
  ?FS dcterms:identifier ?ID .
  ?FS rdfs:label ?L .
  ?FS dcterms:source ?S .
  ?FS dcterms:tableOfContents ?TOC .
  ?FS dcterms:title ?T .
  ?FS rdf:type ecglview:DigitalObjectRecord .
}

## http://linked.rvdata.us/page/format/100008
## For format, we need stub (probably explicitly say it FileFormats)

CONSTRUCT {
}
FROM
WHERE {
	?FMT dcterms:description ?DESC . ## R2R uses rdfs:description, which is not defined in RDFS
	?FMT dcterms:identifier ?ID .
	?FMT rdfs:label ?L .
	?FMT rdf:type ecglview:Format .
}

## http://linked.rvdata.us/page/geometry/100004
## are all geometries in R2R actually geo:Point?
CONSTRUCT {
}
FROM
WHERE {
	?GEOM dcterms:identifier ?ID .
	?GEOM rdfs:label ?L .
	?GEOM geo:lat ?LAT .
	?GEOM geo:long ?LONG .
	?GEOM rdf:type ecgl:Geometry .
}

## <http://linked.rvdata.us/page/holding/100035>
## r2r:Holding rdfs:subClassOf ecglview:DigitalObjectRecord  -- drop it!

CONSTRUCT {
} 
FROM
WHERE {
  ?H ecglview:belongsToRepository ?REPO .
  ?H dcterms:identifier ?ID .
  ?H rdfs:label ?L .
  ?H dcterms:source ?S .
  ?H rdf:type ecglview:DigitalObjectRecord .
}

## http://linked.rvdata.us/page/model/100015
## What is r2r:Model? This is used for device (every device has a make and model -- NERC L22 -- drop vendor from device)
CONSTRUCT {
}
FROM
WHERE {
  ?MOD ecglview:hasVendor ?VEND .
  ?MOD dcterms:identifier ?ID .
  ?MOD rdfs:label ?L .
  ## ?MOD rdf:type r2r:Model .
}


## Based on <http://linked.rvdata.us/page/organization/gov.nsf>
## r2r:Organization rdfs:subClassOf ecglview:Organization

CONSTRUCT {
  ?O rdf:type ecgl:Organization .
  ?O ecgl:isDescribedBy _:io .
  _:io rdf:type ecgl:OrganizationInformationObject .
  _:io ecgl:hasCanonicalName ?ID .
  _:io ecgl:alsoKnownAs ?L .
  _:io ecgl:alsoKnownAs ?M .  
}
FROM <http://address-to-r2r-graph-mapped-to-view>
WHERE {
  ?O rdf:type ecglview:Organization
  ?O dcterms:identifier ?ID .
  ?O rdfs:label ?L .
  ?O foaf:name ?M .
}


## http://linked.rvdata.us/page/participant/100005
## CONSTRUCT {
## }
## FROM
## WHERE {
##  ?P ecglview:hasAffiliation ?ORG .
##  ?P dcterms:identifier ?ID .
##  ?P rdfs:label ?L .
##  ?P ecglview:isPerformedBy ?PERS .
##  ?P ecglview:hasParticipantRoleTypeVoc ?ROL .
##  ?P rdf:type ecglview:AgentRole .
## }




## http://linked.rvdata.us/page/person/100275

CONSTRUCT {
}
FROM
WHERE {
  OPTIONAL {  ?P dcterms:identifier ?ID .}
  OPTIONAL {  ?P ecglview:hasAlternateID ?ID .}
  ?P rdfs:label ?L .
  ?P foaf:name ?M .
  OPTIONAL { { ?P ecglview:hasAffiliation ?ORG . } UNION { ?ORG foaf:member ?P. } }
  ?P rdf:type ecglview:Person
}


## http://linked.rvdata.us/page/port/100006
## r2r:Port rdfs:subClassOf ecglview:Place
## understand this as place

CONSTRUCT {
}
FROM
WHERE {
  OPTIONAL { ?PLACE ecglview:hasCountry ?C . }  ## hasCountry only applies to political gazetteer
  ?PLACE ecglview:hasGeometry ?GEOM .  
  ?PLACE dcterms:identifier ?ID .
  ?PLACE rdfs:label ?L .
  ?PLACE rdf:type ecglview:Place
}

## http://linked.rvdata.us/page/product/100014
## r2r:Product rdfs:subClassOf ecglview:DigitalObjectRecord
CONSTRUCT {
}
FROM
WHERE {
	?PROD dcterms:identifier ?ID .
	?PROD rdfs:label ?L .
	?PROD dcterms:source ?URL .
	?PROD rdf:type ecglview:DigitalObjectRecord .
}

## http://linked.rvdata.us/page/report/100455
CONSTRUCT {
}
FROM
WHERE {
	?PROD dcterms:identifier ?ID .
	?PROD rdfs:label ?L .
	?PROD dcterms:source ?URL .
	?PROD rdf:type ecglview:DigitalObjectRecord .
}

## http://linked.rvdata.us/page/repository/IMLGS
## populate repository as organization; repository should be subclass of organization.
CONSTRUCT {
}
FROM
WHERE {
	?REPO dcterms:identifier ?ID .
	?REPO rdfs:label ?L .
	?REPO foaf:name ?M .  
	?REPO rdf:type ecglview:Repository .
}

## http://linked.rvdata.us/page/track/MGL0901
## <http://www.opengis.net/ont/sf#LineString> rdfs:subClassOf ecglview:Geometry 
## Is every track a line string?
CONSTRUCT {
}
FROM
WHERE {
  ?TR geosparql:asWKT ?WKT .
  ?TR rdfs:label ?L .
  ?TR rdf:type ecglview:Geometry  
}

## http://linked.rvdata.us/page/vessel/33H3
## r2r:Vessel rdfs:subClassOf ecglview:Vessel

CONSTRUCT {
}
FROM
WHERE {
  ?V ecglview:hasOperator ?OP .
  ?V ecglview:hasOwner ?OW .
  ?V ecglview:hasAlternateID ?ALTID .
  OPTIONAL { ?V dcterms:identifier ?ID .}
  OPTIONAL { ?V rdfs:label ?L . }
  ?V rdf:type ecglview:Vessel  
  ?V ecglview:hasVesselType ?NERCVESSELTYPE .
}

